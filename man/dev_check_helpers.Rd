% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dev.R
\name{dev_check_helpers}
\alias{dev_check_helpers}
\alias{dev_lint}
\alias{dev_document}
\alias{dev_spell_check}
\alias{dev_build_site}
\alias{dev_publish_vignettes}
\alias{dev_coverage}
\title{Helper functions called by \code{dev_check()}}
\usage{
dev_lint()

dev_document()

dev_spell_check()

dev_build_site()

dev_publish_vignettes()

dev_coverage(file = NULL)
}
\arguments{
\item{file}{passed to \code{\link[covr:file_report]{covr::file_report()}}, optional. See Details.}
}
\value{
Each function returns \code{TRUE} invisibly upon success.
}
\description{
Learn more about what \code{\link[=dev_check]{dev_check()}} does.
}
\details{
\code{\link[=dev_check]{dev_check()}} is a convenience wrapper that runs the following checks in
sequence:
\itemize{
\item \code{\link[=dev_lint]{dev_lint()}} tidies source code with \code{\link[styler:style_pkg]{styler::style_pkg()}}.
\item \code{\link[=dev_document]{dev_document()}} updates package documentation and vignettes with calls
to \code{\link[devtools:document]{devtools::document()}} and \code{\link[usethis:tidyverse]{usethis::use_tidy_description()}}.
\item \code{\link[=dev_spell_check]{dev_spell_check()}} checks spelling of package documentation and vignettes
with calls to \code{\link[spelling:spell_check_package]{spelling::spell_check_package()}} and
\code{\link[spelling:wordlist]{spelling::update_wordlist()}}.
\item \code{\link[=dev_build_site]{dev_build_site()}} builds the documentation site with calls to
\code{\link[=dev_publish_vignettes]{dev_publish_vignettes()}} and \code{\link[pkgdown:build_site]{pkgdown::build_site()}}, then loads a
preview in the RStudio Viewer pane.
\item \code{\link[=dev_coverage]{dev_coverage()}} runs code coverage checks with calls to
\code{\link[covr:package_coverage]{covr::package_coverage()}} and \code{\link[covr:file_report]{covr::file_report()}}.
}
\subsection{Spell checking}{

\code{\link[=dev_spell_check]{dev_spell_check()}} first checks package documentation and vignettes for
spelling errors. If no spelling errors are found, the custom dictionary is
re-sorted, deduplicated, and purged of unused words. If spelling errors are
found, a user confirmation is required before updating the custom dictionary;
otherwise an error is thrown.
}

\subsection{About \emph{vignettes-raw}}{

\code{\link[pkgdown:build_site]{pkgdown::build_site()}} generates a documentation site for your package,
including an "Articles" section that contains rendered package vignettes.
This works great for simple demos, but \code{\link[pkgdown:build_site]{pkgdown::build_site()}} re-renders
every R Markdown vignette when building the site, making it impractical for
long-running vignettes or when code requires specific resources. This
function introduces the concept of a \emph{vignettes-raw} subdirectory as a place for
notebooks and R Markdown documents that are only run manually.

To enable this feature, simply render R Markdown documents in \emph{vignettes-raw}
with \code{keep_md: true}. When you are ready to "publish", simply check in the
rendered \verb{*.md} file (plus any supporting files) into source control.

\code{\link[=dev_publish_vignettes]{dev_publish_vignettes()}} employs a simple hack to add these documents to the
package site without re-rendering. Briefly, the \emph{vignettes-raw} directory is
copied into the \code{vignettes} directory, and some name changes are applied so
\code{\link[pkgdown:build_site]{pkgdown::build_site()}} uses the (pre-rendered) \emph{Markdown} file, rather than
the source \emph{R Markdown} file.
}

\subsection{Coverage reports}{

If a \code{file} is specified, a coverage report will be generated for that file.
If a \code{file} is not specified, and package coverage is less than 100\%, then
the a report will be generated for the file with the least coverage. A
package coverage summary is printed to the console, and if a file report is
generated, it is previewed in the RStudio Viewer pane.
}
}
\references{
\url{https://pkgdown.r-lib.org}
}
\seealso{
\link[spelling:wordlist]{spelling::wordlist}
}
